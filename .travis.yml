language: java
jdk:
  - openjdk8

# 배포 대상 브랜치
branches:
  only:
    - master

# Travis CI 서버의 Home
# 그레이들을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여, 같은 의존성은
# 다음 배포 때부터 다시 받지 않도록 설정.
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'
# master 브랜치에 푸시되었을 때 수행하는 명령어
#여기서는 프로젝트 내부에 둔 gradlew을 통해 clean & build를 수행.
script: "./gradlew clean build"

before_install:
  - chmod +x gradlew

before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성, travis ci는 S3로 특정 파일만 업로드가 안되고 디렉토리 단위로만 가능해서 deploy 디렉토리를 항상 생성해야함.
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy 이동 후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/buzz-project.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis Setting 값
    secret_access_key: $AWS_SECRET_KEY # Travis Setting 값
    bucket: buzz-project-webservice-build
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy #before_deploy에서 생성한 디렉토리, 해당 위치의 파일들만 s3로 전송
    wait-until-deployed: true
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: buzz-project-webservice-build
    key: buzz-project.zip
    bundle_type: zip
    application: buzz-project-webservice
    deployment_group: buzz-project-webservice-group
    region: ap-northeast-2
    wait-until-deployed: true

#CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - timec.june@gmail.com